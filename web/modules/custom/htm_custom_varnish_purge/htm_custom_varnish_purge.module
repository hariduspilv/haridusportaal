<?php

/**
 * @file
 * Contains htm_custom_varnish_purge.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use GuzzleHttp\Client;

/**
 * Implements hook_help().
 */
function htm_custom_varnish_purge_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the htm_custom_varnish_purge module.
    case 'help.page.htm_custom_varnish_purge':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module for Varnish Purge') . '</p>';
      return $output;

    default:
  }
}

function htm_custom_varnish_purge_entity_presave(Drupal\Core\Entity\EntityInterface $entity) {

    $cache_tags = $entity->getCacheTagsToInvalidate();

    if(count($cache_tags) > 0){

        $configuration = \Drupal::config('htm_custom_varnish_purge.varnishpurge');
        $client = new Client([
            'timeout'  => 30,
        ]);

        $purgeurl = 'http://'.$configuration->get('path').':'.$configuration->get('port');
        $varnishcommand = "PURGE";

        foreach($cache_tags as $cache_tag){

            $header = [
                $configuration->get('path') => $cache_tag
            ];

            try{
                $client->request($varnishcommand, $purgeurl, [$header]);
            } catch (Guzzle\Http\Exception\BadResponseException $e){
                \Drupal::logger('htm_custom_varnish_purge')->error($e);
            }
        }
    }
}
