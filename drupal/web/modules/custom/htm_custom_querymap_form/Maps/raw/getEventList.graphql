query getEventList($tagsValue: [String], $tagsEnabled: Boolean, $typesValue: [String], $typesEnabled: Boolean, $titleValue: String, $titleEnabled: Boolean, $timeEnabled: Boolean, $dateFrom: String, $dateTo: String, $timeFrom: String, $timeTo: String, $lang: LanguageId!, $offset: Int, $limit: Int) {
  nodeQuery(offset: $offset, limit: $limit, sort: {field: "field_event_main_date.value", direction: ASC}, filter:
  {conjunction: AND, conditions: [
    {operator: EQUAL, field: "type", value: ["event"], language: $lang},
    {operator: EQUAL, field: "status", value: "1", language: $lang},
    {operator: IN, field: "field_tag.entity.tid", value: $tagsValue, language: $lang, enabled: $tagsEnabled},
    {operator: IN, field: "field_event_type.entity.tid", value: $typesValue, language: $lang, enabled: $typesEnabled},
    {operator: LIKE, field: "title", value: [$titleValue], language: $lang, enabled: $titleEnabled},
    {operator: GREATER_THAN_OR_EQUAL, field: "field_event_main_date", value: [$dateFrom]},
    {operator: SMALLER_THAN_OR_EQUAL, field: "field_event_main_date", value: [$dateTo]},
    {operator: GREATER_THAN_OR_EQUAL, field: "field_event_main_start_time", value: [$timeFrom], enabled: $timeEnabled},
    {operator: SMALLER_THAN_OR_EQUAL, field: "field_event_main_start_time", value: [$timeTo], enabled: $timeEnabled}]}) {
    count
    entities(language: $lang) {
      ... on NodeEvent {
        nid
        title: entityLabel
        location: fieldEventLocation {
          lat
          lon
          name
        }
        fieldEventType {
          entity {
            entityId
            entityLabel
          }
        }
        fieldEventMainDate {
          value
          date
          unix
        }
        fieldEventMainEndDate {
          value
          date
          unix
        }
        fieldEventMainStartTime: fieldEventStartTimeMain
        fieldEventMainEndTime:fieldEventEndTimeMain
        eventDates: fieldEventDate {
          ...eventdates
        }
        fieldEntryType
        registrationDate: fieldRegistrationDate {
          ...registrationdates
        }
        hashTags: fieldTag {
          entity {
            entityLabel
            entityId
          }
        }
        entityUrl {
          ...url
        }
      }
    }
  }
}

fragment eventdates on FieldNodeEventFieldEventDate {
  entity {
    ... on ParagraphEventDate {
      fieldEventDate:fieldEventAdditionalDate{
        value
        date
        unix
      }
      fieldEventStartTime:fieldEventStartTimeAddition
      fieldEventEndTime:fieldEventEndTimeAddition
    }
  }
}

fragment registrationdates on FieldNodeEventFieldRegistrationDate {
  entity {
    ... on ParagraphRegistrationPeriod {
      fieldRegistrationFirstDate {
        value
        date
        unix
      }
      fieldRegistrationLastDate {
        value
        date
        unix
      }
    }
  }
}

fragment url on EntityCanonicalUrl {
  path
  languageSwitchLinks {
    active
    title
  }
}
