$__iconfont__data: map-merge(if(global_variable_exists('__iconfont__data'), $__iconfont__data, ()), (
	"iconfont": (
		"activity": "\ea01",
		"airplay": "\ea02",
		"alert-circle": "\ea03",
		"alert-octagon": "\ea04",
		"alert-triangle": "\ea05",
		"align-center": "\ea06",
		"align-justify": "\ea07",
		"align-left": "\ea08",
		"align-right": "\ea09",
		"anchor": "\ea0a",
		"aperture": "\ea0b",
		"archive": "\ea0c",
		"arrow-down-circle": "\ea0d",
		"arrow-down-left": "\ea0e",
		"arrow-down-right": "\ea0f",
		"arrow-down": "\ea10",
		"arrow-left-circle": "\ea11",
		"arrow-left": "\ea12",
		"arrow-right-circle": "\ea13",
		"arrow-right": "\ea14",
		"arrow-up-circle": "\ea15",
		"arrow-up-left": "\ea16",
		"arrow-up-right": "\ea17",
		"arrow-up": "\ea18",
		"at-sign": "\ea19",
		"award": "\ea1a",
		"bar-chart-2": "\ea1b",
		"bar-chart": "\ea1c",
		"battery-charging": "\ea1d",
		"battery": "\ea1e",
		"bell-off": "\ea1f",
		"bell": "\ea20",
		"bluetooth": "\ea21",
		"bold": "\ea22",
		"book-open": "\ea23",
		"book": "\ea24",
		"bookmark": "\ea25",
		"box": "\ea26",
		"briefcase": "\ea27",
		"calendar": "\ea28",
		"camera-off": "\ea29",
		"camera": "\ea2a",
		"cast": "\ea2b",
		"check-circle": "\ea2c",
		"check-square": "\ea2d",
		"check": "\ea2e",
		"chevron-down": "\ea2f",
		"chevron-left": "\ea30",
		"chevron-right": "\ea31",
		"chevron-up": "\ea32",
		"chevrons-down": "\ea33",
		"chevrons-left": "\ea34",
		"chevrons-right": "\ea35",
		"chevrons-up": "\ea36",
		"chrome": "\ea37",
		"circle": "\ea38",
		"clipboard": "\ea39",
		"clock": "\ea3a",
		"cloud-drizzle": "\ea3b",
		"cloud-lightning": "\ea3c",
		"cloud-off": "\ea3d",
		"cloud-rain": "\ea3e",
		"cloud-snow": "\ea3f",
		"cloud": "\ea40",
		"code": "\ea41",
		"codepen": "\ea42",
		"codesandbox": "\ea43",
		"coffee": "\ea44",
		"columns": "\ea45",
		"command": "\ea46",
		"compass": "\ea47",
		"copy": "\ea48",
		"corner-down-left": "\ea49",
		"corner-down-right": "\ea4a",
		"corner-left-down": "\ea4b",
		"corner-left-up": "\ea4c",
		"corner-right-down": "\ea4d",
		"corner-right-up": "\ea4e",
		"corner-up-left": "\ea4f",
		"corner-up-right": "\ea50",
		"cpu": "\ea51",
		"credit-card": "\ea52",
		"crop": "\ea53",
		"crosshair": "\ea54",
		"database": "\ea55",
		"delete": "\ea56",
		"disc": "\ea57",
		"dollar-sign": "\ea58",
		"download-cloud": "\ea59",
		"download": "\ea5a",
		"droplet": "\ea5b",
		"edit-2": "\ea5c",
		"edit-3": "\ea5d",
		"edit": "\ea5e",
		"external-link": "\ea5f",
		"eye-off": "\ea60",
		"eye": "\ea61",
		"facebook": "\ea62",
		"fast-forward": "\ea63",
		"feather": "\ea64",
		"figma": "\ea65",
		"file-minus": "\ea66",
		"file-plus": "\ea67",
		"file-text": "\ea68",
		"file": "\ea69",
		"film": "\ea6a",
		"filter": "\ea6b",
		"flag": "\ea6c",
		"folder-minus": "\ea6d",
		"folder-plus": "\ea6e",
		"folder": "\ea6f",
		"framer": "\ea70",
		"frown": "\ea71",
		"gift": "\ea72",
		"git-branch": "\ea73",
		"git-commit": "\ea74",
		"git-merge": "\ea75",
		"git-pull-request": "\ea76",
		"github": "\ea77",
		"gitlab": "\ea78",
		"globe": "\ea79",
		"grid": "\ea7a",
		"hard-drive": "\ea7b",
		"hash": "\ea7c",
		"headphones": "\ea7d",
		"heart": "\ea7e",
		"help-circle": "\ea7f",
		"hexagon": "\ea80",
		"home": "\ea81",
		"image": "\ea82",
		"inbox": "\ea83",
		"info": "\ea84",
		"instagram": "\ea85",
		"italic": "\ea86",
		"key": "\ea87",
		"layers": "\ea88",
		"layout": "\ea89",
		"life-buoy": "\ea8a",
		"link-2": "\ea8b",
		"link": "\ea8c",
		"linkedin": "\ea8d",
		"list": "\ea8e",
		"loader": "\ea8f",
		"lock": "\ea90",
		"log-in": "\ea91",
		"log-out": "\ea92",
		"mail": "\ea93",
		"map-pin": "\ea94",
		"map": "\ea95",
		"maximize-2": "\ea96",
		"maximize": "\ea97",
		"meh": "\ea98",
		"menu": "\ea99",
		"message-circle": "\ea9a",
		"message-square": "\ea9b",
		"mic-off": "\ea9c",
		"mic": "\ea9d",
		"minimize-2": "\ea9e",
		"minimize": "\ea9f",
		"minus-circle": "\eaa0",
		"minus-square": "\eaa1",
		"minus": "\eaa2",
		"monitor": "\eaa3",
		"moon": "\eaa4",
		"more-horizontal": "\eaa5",
		"more-vertical": "\eaa6",
		"mouse-pointer": "\eaa7",
		"move": "\eaa8",
		"music": "\eaa9",
		"navigation-2": "\eaaa",
		"navigation": "\eaab",
		"octagon": "\eaac",
		"package": "\eaad",
		"paperclip": "\eaae",
		"pause-circle": "\eaaf",
		"pause": "\eab0",
		"pen-tool": "\eab1",
		"percent": "\eab2",
		"phone-call": "\eab3",
		"phone-forwarded": "\eab4",
		"phone-incoming": "\eab5",
		"phone-missed": "\eab6",
		"phone-off": "\eab7",
		"phone-outgoing": "\eab8",
		"phone": "\eab9",
		"pie-chart": "\eaba",
		"play-circle": "\eabb",
		"play": "\eabc",
		"plus-circle": "\eabd",
		"plus-square": "\eabe",
		"plus": "\eabf",
		"pocket": "\eac0",
		"power": "\eac1",
		"printer": "\eac2",
		"radio": "\eac3",
		"refresh-ccw": "\eac4",
		"refresh-cw": "\eac5",
		"repeat": "\eac6",
		"rewind": "\eac7",
		"rotate-ccw": "\eac8",
		"rotate-cw": "\eac9",
		"rss": "\eaca",
		"save": "\eacb",
		"scissors": "\eacc",
		"search": "\eacd",
		"send": "\eace",
		"server": "\eacf",
		"settings": "\ead0",
		"share-2": "\ead1",
		"share": "\ead2",
		"shield-off": "\ead3",
		"shield": "\ead4",
		"shopping-bag": "\ead5",
		"shopping-cart": "\ead6",
		"shuffle": "\ead7",
		"sidebar": "\ead8",
		"skip-back": "\ead9",
		"skip-forward": "\eada",
		"slack": "\eadb",
		"slash": "\eadc",
		"sliders": "\eadd",
		"smartphone": "\eade",
		"smile": "\eadf",
		"speaker": "\eae0",
		"square": "\eae1",
		"star-filled": "\eae2",
		"star": "\eae3",
		"stop-circle": "\eae4",
		"sun": "\eae5",
		"sunrise": "\eae6",
		"sunset": "\eae7",
		"tablet": "\eae8",
		"tag": "\eae9",
		"target": "\eaea",
		"terminal": "\eaeb",
		"thermometer": "\eaec",
		"thumbs-down": "\eaed",
		"thumbs-up": "\eaee",
		"toggle-left": "\eaef",
		"toggle-right": "\eaf0",
		"trash-2": "\eaf1",
		"trash": "\eaf2",
		"trello": "\eaf3",
		"trending-down": "\eaf4",
		"trending-up": "\eaf5",
		"triangle": "\eaf6",
		"truck": "\eaf7",
		"tv": "\eaf8",
		"twitter": "\eaf9",
		"type": "\eafa",
		"umbrella": "\eafb",
		"underline": "\eafc",
		"unlock": "\eafd",
		"upload-cloud": "\eafe",
		"upload": "\eaff",
		"user-check": "\eb00",
		"user-minus": "\eb01",
		"user-plus": "\eb02",
		"user-x": "\eb03",
		"user": "\eb04",
		"users": "\eb05",
		"video-off": "\eb06",
		"video": "\eb07",
		"voicemail": "\eb08",
		"volume-1": "\eb09",
		"volume-2": "\eb0a",
		"volume-x": "\eb0b",
		"volume": "\eb0c",
		"watch": "\eb0d",
		"wifi-off": "\eb0e",
		"wifi": "\eb0f",
		"wind": "\eb10",
		"x-circle": "\eb11",
		"x-octagon": "\eb12",
		"x-square": "\eb13",
		"x": "\eb14",
		"youtube": "\eb15",
		"zap-off": "\eb16",
		"zap": "\eb17",
		"zoom-in": "\eb18",
		"zoom-out": "\eb19"
	)
));


$create-font-face: true !default; // should the @font-face tag get created?

// should there be a custom class for each icon? will be .filename
$create-icon-classes: true !default; 

// what is the common class name that icons share? in this case icons need to have .icon.filename in their classes
// this requires you to have 2 classes on each icon html element, but reduced redeclaration of the font family
// for each icon
$icon-common-class: 'icon' !default;

// if you whish to prefix your filenames, here you can do so.
// if this string stays empty, your classes will use the filename, for example
// an icon called star.svg will result in a class called .star
// if you use the prefix to be 'icon-' it would result in .icon-star
$icon-prefix: '' !default; 

// helper function to get the correct font group
@function iconfont-group($group: null) {
  @if (null == $group) {
    $group: nth(map-keys($__iconfont__data), 1);
  }
  @if (false == map-has-key($__iconfont__data, $group)) {
    @warn 'Undefined Iconfont Family!';
    @return ();
  }
  @return map-get($__iconfont__data, $group);
}

// helper function to get the correct icon of a group
@function iconfont-item($name) {
  $slash: str-index($name, '/');
  $group: null;
  @if ($slash) {
    $group: str-slice($name, 0, $slash - 1);
    $name: str-slice($name, $slash + 1);
  } @else {
    $group: nth(map-keys($__iconfont__data), 1);
  }
  $group: iconfont-group($group);
  @if (false == map-has-key($group, $name)) {
    @warn 'Undefined Iconfont Glyph!';
    @return '';
  }
  @return map-get($group, $name);
}

// complete mixing to include the icon
// usage:
// .my_icon{ @include iconfont('star') }
@mixin iconfont($icon) {
  $slash: str-index($icon, '/');
  $group: null;
  @if ($slash) {
    $group: str-slice($icon, 0, $slash - 1);
  } @else {
    $group: nth(map-keys($__iconfont__data), 1);
  }
  &:before {
    font-family: $group;
    font-style: normal;
    font-weight: 400;
    content: iconfont-item($icon);
  }
}

// creates the font face tag if the variable is set to true (default)
@if $create-font-face == true {
  @font-face {
   font-family: "iconfont";
   src: url('../../assets/fonts/iconfont.eot'); /* IE9 Compat Modes */
   src: url('../../assets/fonts/iconfont.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
      url('../../assets/fonts/iconfont.woff') format('woff'), /* Pretty Modern Browsers */
      url('../../assets/fonts/iconfont.ttf')  format('truetype'), /* Safari, Android, iOS */
      url('../../assets/fonts/iconfont.svg') format('svg'); /* Legacy iOS */
  }
}

// creates icon classes for each individual loaded svg (default)
@if $create-icon-classes == true {
  .#{$icon-common-class} {
    font-style: normal;
    font-weight: 400;

    @each $icon, $content in map-get($__iconfont__data, "iconfont") {
      &.#{$icon-prefix}#{$icon}:before {
        font-family: "iconfont";
        content: iconfont-item("iconfont/#{$icon}");
      }
    }
  }
}
